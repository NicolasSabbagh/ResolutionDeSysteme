import numpy as np

A = np.array([[8,-10,3],[4,5,6],[7,8,9]])
eps = 10**(-12)        

def trouver_pivot(A,i) :
    L = abs(A[:: , i ])
    max , t  = L[0] , 0
    for elt in L : 
       if elt >= max :
        max = elt 
        t +=1
    return ( abs(max) ,t-1 )
     
        
def echangerlignes(A , a , b ):
    T = A[a,:].copy()
    A[a,:] = A[b,:]
    A[b,:] = T
    
def resoudre(A) :
    n = len(A)
    for i in range (n) :                            #colones apres colones
        M , ind = trouver_pivot(A,i)                #on trouve le max et son indice dans cette colone
        if M < eps :
            print ('matrice non inversible')
        echangerlignes(A , 0, ind)                  #on place la ligne du max en haut 
        print(i)            
        for k in range(1,n) :                       #pour toutes les autre lignes,
            A[k] = M*A[k] - A[k,i]*A[0]             #on fait les opÃ©rations
        print(A)                                    #on imprime A pour verfier
    return(A)
    
    



    
    


 
